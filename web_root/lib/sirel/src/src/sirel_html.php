<?php
// ------------------------------------------------------------------------
// Copyright (c) 2010, martin.vahi@softf1.com that has an
// Estonian personal identification code of 38108050020.
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or
// without modification, are permitted provided that the following
// conditions are met:
//
// * Redistributions of source code must retain the above copyright
//   notice, this list of conditions and the following disclaimer.
// * Redistributions in binary form must reproduce the above copyright
//   notice, this list of conditions and the following disclaimer
//   in the documentation and/or other materials provided with the
//   distribution.
// * Neither the name of the Martin Vahi nor the names of its
//   contributors may be used to endorse or promote products derived
//   from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND
// CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
// INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
// MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
// CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
// BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
// SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
// WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
// NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
//------------------------------------------------------------------------

require_once('sirel_core.php');

// This class is a "form", where on just "fills in the blanks", "pushes"
// method "to_s()" and it returns a string representation of a HTML-page
// with document type definition, header, body, etc.
class sirelHTMLPage {
	private $s_credits_HTML_comment=NULL;
	private $ar_data2datasection_data_ = array();
	private $ar_data2datasection_html_id_ = array();
	private $s_title_ = '';
	private $b_title_set_ = False;
	public function set_title($s_title) {
		$this -> s_title_ = $s_title;
		$this -> b_title_set_ = True;
	} // set_title

	public function get_title() {
		$s = $this -> s_title_;
		return $s;
	} // get_title


	private $s_body_ = '';
	///<iframe id="yui-history-iframe" src="path-to-existing-asset"></iframe>
	// <input id="yui-history-field" type="hidden"> ';


// RENESSAATOR_BLOCK_START
// RENESSAATOR_BLOCK_ID=block1
// RENESSAATOR_SOURCE_LANGUAGE=Ruby
// RENESSAATOR_SOURCE_START
// SIREL_HOME=ENV["SIREL_HOME"]
// SIREL_CODE_GENERATION=SIREL_HOME+"/src/dev_tools/code_generation/"
// require(SIREL_CODE_GENERATION+"/sirel_cg1.rb")
// require(SIREL_CODE_GENERATION+"/by_file/sirel_html_block1.rb")
// RENESSAATOR_SOURCE_END
//
// RENESSAATOR_AUTOGENERATED_TEXT_START
	private $cg_ar_css_ = array();
	public function add_2_ar_css($s_value) {
		// WARNING: This function resides in an autogeneration region.
		array_push($this->cg_ar_css_,$s_value);
	} // add_2_ar_css
	public function to_s_ar_css($s_separator="\n") {
		// WARNING: This function resides in an autogeneration region.
		$s_prefix='';

		$s_out=$s_prefix;
		$b_nonfirst=False;
		$s_elem='';
		$ar_keys=array_keys($this->cg_ar_css_);
		foreach ($ar_keys as $a_key) {
			$elem=$this->cg_ar_css_[$a_key];
			if($b_nonfirst!=False) {
				$s_out=$s_out.$s_separator;
			} // if
			$s_elem='<link rel="stylesheet" href="'.$elem.'"  type="text/css">';
			$s_out=$s_out.$s_elem;
			$b_nonfirst=True;
		} // foreach
		$s_suffix='';

		$s_out=$s_out.$s_suffix;
		return $s_out;
	} // to_s_ar_css


	private $cg_ar_javascript_ = array();
	public function add_2_ar_javascript($s_value) {
		// WARNING: This function resides in an autogeneration region.
		array_push($this->cg_ar_javascript_,$s_value);
	} // add_2_ar_javascript
	public function to_s_ar_javascript($s_separator="\n") {
		// WARNING: This function resides in an autogeneration region.
		$s_prefix='';

		$s_out=$s_prefix;
		$b_nonfirst=False;
		$s_elem='';
		$ar_keys=array_keys($this->cg_ar_javascript_);
		foreach ($ar_keys as $a_key) {
			$elem=$this->cg_ar_javascript_[$a_key];
			if($b_nonfirst!=False) {
				$s_out=$s_out.$s_separator;
			} // if
			$s_elem='<script type="text/javascript" src="'.$elem.'"></script>';
			$s_out=$s_out.$s_elem;
			$b_nonfirst=True;
		} // foreach
		$s_suffix='';

		$s_out=$s_out.$s_suffix;
		return $s_out;
	} // to_s_ar_javascript


	private $cg_ar_head_section_ = array();
	public function add_2_ar_head_section($s_value) {
		// WARNING: This function resides in an autogeneration region.
		array_push($this->cg_ar_head_section_,$s_value);
	} // add_2_ar_head_section
	public function to_s_ar_head_section($s_separator="\n") {
		// WARNING: This function resides in an autogeneration region.
		$s_prefix='';

		$s_out=$s_prefix;
		$b_nonfirst=False;
		$s_elem='';
		$ar_keys=array_keys($this->cg_ar_head_section_);
		foreach ($ar_keys as $a_key) {
			$elem=$this->cg_ar_head_section_[$a_key];
			if($b_nonfirst!=False) {
				$s_out=$s_out.$s_separator;
			} // if
			$s_elem=$elem;
			$s_out=$s_out.$s_elem;
			$b_nonfirst=True;
		} // foreach
		$s_suffix='';

		$s_out=$s_out.$s_suffix;
		return $s_out;
	} // to_s_ar_head_section


	private $cg_ar_body_ = array();
	public function add_2_ar_body($s_value) {
		// WARNING: This function resides in an autogeneration region.
		array_push($this->cg_ar_body_,$s_value);
	} // add_2_ar_body
	public function to_s_ar_body($s_separator='') {
		// WARNING: This function resides in an autogeneration region.
		$s_prefix='';

		$s_out=$s_prefix;
		$b_nonfirst=False;
		$s_elem='';
		$ar_keys=array_keys($this->cg_ar_body_);
		foreach ($ar_keys as $a_key) {
			$elem=$this->cg_ar_body_[$a_key];
			if($b_nonfirst!=False) {
				$s_out=$s_out.$s_separator;
			} // if
			$s_elem=$elem;
			$s_out=$s_out.$s_elem;
			$b_nonfirst=True;
		} // foreach
		$s_suffix='';

		$s_out=$s_out.$s_suffix;
		return $s_out;
	} // to_s_ar_body


	private $cg_arht_body_attribute_ = array();
	public function add_2_arht_body_attribute($s_name, $s_value) {
		// WARNING: This function resides in an autogeneration region.
		$this->cg_arht_body_attribute_[$s_name] = $s_value;
	} // add_2_arht_body_attribute
	public function to_s_arht_body_attribute($s_separator=' ') {
		// WARNING: This function resides in an autogeneration region.
		$s_prefix='';

		$s_out=$s_prefix;
		$b_nonfirst=False;
		$s_elem='';
		$ar_keys=array_keys($this->cg_arht_body_attribute_);
		foreach ($ar_keys as $a_key) {
			$elem=$this->cg_arht_body_attribute_[$a_key];
			if($b_nonfirst!=False) {
				$s_out=$s_out.$s_separator;
			} // if
			$s_elem=$a_key.'="'.$elem.'"';
			$s_out=$s_out.$s_elem;
			$b_nonfirst=True;
		} // foreach
		$s_suffix='';

		$s_out=$s_out.$s_suffix;
		return $s_out;
	} // to_s_arht_body_attribute


	private $cg_arht_data_section_ = array();
	public function add_2_arht_data_section($s_name, $s_value) {
		// WARNING: This function resides in an autogeneration region.
		$this->cg_arht_data_section_[$s_name] = $s_value;
	} // add_2_arht_data_section
	public function to_s_arht_data_section($s_separator="\n") {
		// WARNING: This function resides in an autogeneration region.
		$s_prefix='';
		$s_prefix='<div id="webpage_initiation_data_from_server_div" style="visibility:hidden;">'."\n";
		$s_out=$s_prefix;
		$b_nonfirst=False;
		$s_elem='';
		$ar_keys=array_keys($this->cg_arht_data_section_);
		foreach ($ar_keys as $a_key) {
			$elem=$this->cg_arht_data_section_[$a_key];
			if($b_nonfirst!=False) {
				$s_out=$s_out.$s_separator;
			} // if
			$s_elem='<p id="webpage_initiation_data_from_server_'.$a_key.'" >'.$elem.'</p>';
			$s_out=$s_out.$s_elem;
			$b_nonfirst=True;
		} // foreach
		$s_suffix='';
		$s_suffix='</div> <!-- id=="webpage_initiation_data_from_server_div" -->'."\n";
		$s_out=$s_out.$s_suffix;
		return $s_out;
	} // to_s_arht_data_section



// RENESSAATOR_AUTOGENERATED_TEXT_END
// RENESSAATOR_BLOCK_END



	public function __construct() {
		$this -> add_2_arht_body_attribute('id', 'the_document_body');
		$this -> add_2_arht_body_attribute('class', 'yui-skin-sam');

		$this->s_credits_HTML_comment="\n\n".'<!-- '.
			'Generated with a copy of the Sirel PHP Library '."\n".
			'     from https://github.com/martinvahi/sirel -->'."\n\n";
	} // constructor

	private function JavaScript_form_to_s() {
		$answer = '';
		if (count($this -> cg_ar_javascript_) == 0) {
			return $answer;
		} // if
		$answer = '<form action="action.php" ' .
			'id="sirel_data_from_JavaScript_formscript_form">' . "\n" .
			'        <input type="hidden" name="formscript" ' .
			'id="sirel_data_from_JavaScript_formscript_field" value="unspecified|||" />' .
			"\n</form>\n";
		return $answer;
	} // JavaScript_form_to_s

	private function to_s_head() {
		$s_title = NULL;
		if ($this -> b_title_set_) {
			$s_title = $this -> s_title_;
		} else {
			$s_title = sirelSiteConfig :: $site_titleprefix;
		} // if
		$something_from_the_YUI_framework = '' .
			'<style type="text/css">
                /* Credits for the body 0-margins go to 
                   the YUI team at http://yuilibrary.com/ */
		body {
			margin:0;
			padding:0;
		}
		</style>';
		// According to some sources the CSS needs to be before the JavaScript
		// to allow the downloads of the CSS and JavaScript to take place in
		// parallel.
		//
		// The "Transitional" in the doctype switches in
		// Internet Explorer 8 "semi-quirks mode". The difference is that
		// in the quirks mode, the CSS position property, "fixed" has not
		// been properly implemented.
		// $s='<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">'.
		//
		// The last FireFox and Chrome compatible, "properly working", doctype
		// that precedes the HTML5:
		// $s = '<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Strict//EN">' .
		//
		$ar=array();
		array_push($ar,'<!DOCTYPE HTML>', // That's the HTML5 doctype.
			"\n<html>\n",
			"<head>\n",
			"<meta charset=\"UTF-8\">\n",
			''.$this->s_credits_HTML_comment,
			"<title>",$s_title,"</title>\n",
			$something_from_the_YUI_framework,
			"\n","\n",
			$this->to_s_ar_css(),$this->to_s_ar_javascript(),
			$this->to_s_ar_head_section(),"\n</head>\n");
		$s_out=s_concat_array_of_strings($ar);
		return $s_out;
	} // to_s_head

	// Returns the source of the HTML page.
	//  The HTML source can be attained as a whole or in 2 parts: the
	// header and the body. The idea is that if the header part of
	// the HTML page, which contains links to CSS files and JavaScript
	// files, is sent from the server (http://ee.php.net/flush
	// http://ee2.php.net/manual/en/function.ob-end-flush.php
	// http://ee.php.net/manual/en/function.ob-flush.php ) before
	// the rest of the page has been assembled, the client has a chance
	// to begin downloading the CSS and JavaScript files sooner than it
	// otherwise would.
	public function to_s($part = NULL) {
		$ar=array();
		switch ($part) {
			case 'header':
				array_push($ar,$this->to_s_head());
				break;
			case 'body':
				array_push($ar,
					'<body ',$this->to_s_arht_body_attribute(),">\n",
					$this->to_s_ar_body(),"\n",
					$this->JavaScript_form_to_s(),
					$this->to_s_arht_data_section(),"</body>\n</html>");
				break;
			case NULL:
				array_push($ar,
					$this->to_s_head(),
					'<body ',$this->to_s_arht_body_attribute(),">\n",
					$this->to_s_ar_body(),"\n",
					$this->JavaScript_form_to_s(),
					$this->to_s_arht_data_section(),"</body>\n</html>");
				break;
			default:
				sirelThrowLogicException(__FILE__, __LINE__,
					"sirelHTMLPage->to_s: nonexisting
			code region (==" . $part . ") ");
				break;
		} // switch
		$s_out=s_concat_array_of_strings($ar);
		return $s_out;
	} // to_s

} // class sirelHTMLPage

