#!/usr/bin/ruby
#==========================================================================
=begin
 Copyright 2010, martin.vahi@softf1.com that has an
 Estonian personal identification code of 38108050020.
 All rights reserved. This file is licensed under the
 BSD license: http://www.opensource.org/licenses/bsd-license.php
=end
#==========================================================================
if !defined? KIBUVITS_HOME
   x=ENV['KIBUVITS_HOME']
   KIBUVITS_HOME=x if (x!=nil and x!="")
end # if

require "rubygems"
require "monitor"
if defined? KIBUVITS_HOME
   require  KIBUVITS_HOME+"/src/include/kibuvits_str.rb"
   require  KIBUVITS_HOME+"/src/include/kibuvits_io.rb"
else
   require  "kibuvits_str.rb"
   require  "kibuvits_io.rb"
end # if

if !defined? SIREL_CODE_GENERATION
   x=ENV['SIREL_CODE_GENERATION']
   SIREL_CODE_GENERATION=x if (x!=nil and x!="")
end # if
#require SIREL_CODE_GENERATION+"/sirel_cg1.rb"
#==========================================================================

class SirelCG_sirelDBhtX_multiplier
   def initialize
      @s_template=nil
      @s_searchstring_class_name="sirelDBht1"
      @s_searchstring_database_table_name="dbhashtable1"
      @s_prefix_class_name="sirelDBht"
      @s_prefix_database_table_name="dbhashtable"
      @s_warning="\n// Warning: this text resides in an autogenerated region.\n"
   end # initialize

   private

   def init_s_template
      s_sirel_home=ENV['SIREL_HOME']
      s_php=file2str(s_sirel_home+"/src/sirel_dbht.php")
      s_start="CODE_GENERATION_TEMPLATE_START"
      s_end="CODE_GENERATION_TEMPLATE_END"
      s_hay,ht_out=Kibuvits_str.pick_by_instance(s_start,s_end,s_php)
      i_c=ht_out.values.count
      throw "ht_out.values.count=="+i_c.to_s if i_c!=1
      @s_template=ht_out.values[0]
   end # init_s_template

   public
   def multiply i_number_of_copies
      bn=binding()
      kibuvits_typecheck bn, Fixnum, i_number_of_copies
      init_s_template if @s_template==nil
      s_out=""
      i=2
      s_replacement_string_class_name=@s_prefix_class_name+i.to_s
      s_replacement_string_database_table_name=@s_prefix_database_table_name+i.to_s
      i_number_of_copies.times do
         s_out=s_out+"\n"+@s_warning+
         @s_template.gsub(
         @s_searchstring_class_name,s_replacement_string_class_name).gsub(
         @s_searchstring_database_table_name,s_replacement_string_database_table_name)
         i=i+1
         s_replacement_string_class_name=@s_prefix_class_name+i.to_s
         s_replacement_string_database_table_name=@s_prefix_database_table_name+i.to_s
      end # loop
      return s_out
   end # multiply

end # class SirelCG_sirelDBhtX_multiplier


#==========================================================================
